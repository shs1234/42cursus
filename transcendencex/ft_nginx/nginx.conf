worker_processes 1;

events {
	worker_connections 1024;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	upstream users_app {
		server ft_users:8000;
	}

	upstream rooms_app {
		server ft_rooms:8001;
	}

	upstream games_app {
		server ft_games:8002;
	}

	upstream front_app {
		server front:1212;
	}

	server {
		listen 443 ssl;
		listen [::]:443 ssl;

		server_name localhost _;

		ssl_protocols TLSv1.3;
		ssl_certificate     /etc/ssl/certs/server.crt;
		ssl_certificate_key /etc/ssl/private/server.key;

		location ~ ^/(api/oauth/|api/accounts/|_media/accounts/) {
			proxy_pass http://users_app$request_uri;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# API 요청을 ft_games 서비스로 프록시
		location ~ ^/(transcendence/api/check-session/|transcendence/api/user-session-history/) {
			proxy_pass http://games_app$request_uri;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# WebSocket 요청을 ft_games 서비스로 프록시
		location /ws/game/ {
			proxy_pass http://games_app$request_uri;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location ~ ^/(api/room/) {
			proxy_pass http://rooms_app$request_uri;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /ws/chat/ {
			proxy_pass http://rooms_app$request_uri;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location / {
			proxy_pass http://front_app/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}

	server {
		listen 80;
		listen [::]:80;
		server_name _;
		return 301 https://$host$request_uri;
	}
}
